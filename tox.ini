[tox]
envlist = integration,registry,healthcheck-builtin,healthcheck-custom,ports,links

[testenv]
# commands_pre/_post only work in tox 3.4+, but at least in some
# CI configurations they'll tell us if we've leaked resources
commands_pre = python tox_docker/tests/capture_containers_and_volumes.py
commands_post = python tox_docker/tests/assert_containers_and_volumes_unchanged.py

[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
    vcversioner
commands = sphinx-build -W -b html docs/source docs/build/html
commands_pre =
commands_post =

[testenv:style]
# skip the usual pre/post commands
commands_pre =
commands_post =
skip_install = true
deps =
    black
    flake8
    flake8-bugbear
    flake8-isort
    pep8-naming
commands =
    black --check --verbose tox_docker
    flake8 tox_docker

[testenv:integration]
docker =
    nginx:1.13-alpine
    ksdn117/tcp-udp-test
dockerenv =
    ENV_VAR=env-var-value
deps =
    pytest
    mock; python_version == '2.7'
commands = py.test [] tox_docker/tests/test_integration.py

[testenv:registry]
docker = docker.io/library/nginx:1.13-alpine
deps = pytest
commands = py.test [] tox_docker/tests/test_registry.py

[testenv:healthcheck-builtin]
docker = healthcheck/redis:alpine
deps = pytest
commands = py.test [] tox_docker/tests/test_healthcheck.py

[testenv:healthcheck-custom]
docker = redis:5-alpine
deps = pytest
commands = py.test [] tox_docker/tests/test_healthcheck.py

[docker:redis:5-alpine]
healthcheck_cmd = redis-cli ping | grep -q PONG
healthcheck_interval = 1
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_start_period = 0.5

# do NOT add this env to the envlist; it is supposed to fail,
# and the CI scripts run it directly with this expectation
[testenv:healthcheck-failing]
docker = alpine:3.12
commands = python -c ""

[docker:alpine:3.12]
healthcheck_cmd = /bin/false
healthcheck_interval = 1
healthcheck_timeout = 1
healthcheck_retries = 3
healthcheck_start_period = 0

[testenv:ports]
docker = mysql:5.7
dockerenv =
    MYSQL_ALLOW_EMPTY_PASSWORD=true
deps = pytest
commands = py.test [] tox_docker/tests/test_ports.py

[docker:mysql:5.7]
ports = 3306:3306/tcp

[testenv:links]
docker = 
    httpd:2.4-alpine
    registry.hub.docker.com/library/registry:2.7
    nginx:1.19-alpine
deps = pytest
commands = py.test [] tox_docker/tests/test_links.py

[docker:registry.hub.docker.com/library/registry:2.7]
links = httpd:apache

[docker:nginx:1.19-alpine]
links =
    registry.hub.docker.com/library/registry:hub
    httpd
